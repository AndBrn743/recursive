"""
    Build calt feature code from "*.code" glyph names.

    Works best to run on a UFO in a varfontprep folder, so it doesn't generate code for nonexisting glyphs.

    USAGE:

    python <path>/make-calt-fea-code.py "<path>/<source-font>.ufo"
"""

import sys
from fontParts.world import *

try:
    sourceUFO = sys.argv[1]
except IndexError:
    print("At least one arg required: path of UFO with code ligature glyphs")

font = OpenFont(sourceUFO, showInterface=False)

codeLigs = []

caltCode = ""

def makeCaltBlock(ligName):
    feaName = ligName.replace(".code","")
    ligSequence = feaName.replace("_","' ") + "'"
    firstChar = feaName.split("_")[0]
    lastChar = feaName.split("_")[-1]

    block = f"""\
lookup {feaName} {{
    ignore sub {firstChar} {ligSequence};
    ignore sub {ligSequence} {lastChar};
    """

    feaList = feaName.split("_")
    filler = "LIG"


    # >>> list = "a_b_c_d".split("_")
    # >>> for i in range(len(list)):
    # ...     str = "".join("n " for x in range(len(list)-1-i))
    # ...     str += list[-(i+1)] + "' "
    # ...     if i > 0:
    # ...         str += " ".join(x for x in list[-(i):])
    # ...     print(str)
    # ...
    # n n n d'
    # n n c' d
    # n b' c d
    # a' b c d

    # create inner logic
    logic = ""

    for i in range(len(feaList)):
        if i == 0:
            logic += "sub "
        else:
            logic += "    sub "
            
        logic += "".join(f"{filler} " for x in range(len(feaList)-1-i))
        logic += feaList[-(i+1)] + "' "
        if i == 0:
            logic += f"by {ligName};\n"
        if i > 0:
            logic += " ".join(x for x in feaList[-(i):])
            logic += f" by {filler};\n"
    
    block += logic

    # end block
    block += f"""\
}} {feaName};
    """

    return block

for g in font:
    if ".code" in g.name and "_" in g.name and g.name not in font.lib["public.skipExportGlyphs"]:
        codeLigs.append(g.name)

font.close()

codeLigsSorted = sorted(codeLigs,key=lambda x: x.count('_'),reverse=True)

caltBlocks = ""
for lig in codeLigsSorted:
    caltBlocks += makeCaltBlock(lig) + "\n"

caltCode = f"""\
# generated by src/01-shell-scripts-for-sources/features/make-calt-fea-code.py
feature calt {{
{caltBlocks}\
}} calt;
"""

feaPath = "src/features/features/calt-generated--code_fonts_only.fea"
with open(feaPath, "w") as f:
    f.write(caltCode)

print(f"â†’ caltCode saved to {feaPath}")
