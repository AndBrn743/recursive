feature liga {
    sub f i.italic by fi;
    sub f l.italic by fl;
} liga;

@dfltA = [ a        aacute        abreve        abreveacute        abrevedot        abrevegrave        abrevehook        abrevetilde        acircumflex        acircumflexacute        acircumflexdot        acircumflexgrave        acircumflexhook        acircumflextilde        adieresis        adotbelow        agrave        ahook        amacron        aogonek        aring        aringacute        atilde        ];
@italicA = [a.italic aacute.italic abreve.italic abreveacute.italic abrevedot.italic abrevegrave.italic abrevehook.italic abrevetilde.italic acircumflex.italic acircumflexacute.italic acircumflexdot.italic acircumflexgrave.italic acircumflexhook.italic acircumflextilde.italic adieresis.italic adotbelow.italic agrave.italic ahook.italic amacron.italic aogonek.italic aring.italic aringacute.italic atilde.italic ];
@simpleA = [a.simple aacute.simple abreve.simple abreveacute.simple abrevedot.simple abrevegrave.simple abrevehook.simple abrevetilde.simple acircumflex.simple acircumflexacute.simple acircumflexdot.simple acircumflexgrave.simple acircumflexhook.simple acircumflextilde.simple adieresis.simple adotbelow.simple agrave.simple ahook.simple amacron.simple aogonek.simple aring.simple aringacute.simple atilde.simple ];

feature ss01 {
    featureNames {
        # MS, unicode, English
        name "Single-story ‘a’";
        # Apple, roman, unspecified
        name 1 "Single-story ‘a’";
    };
    sub @dfltA by @simpleA;
} ss01;

@dfltG =     [g        gbreve        gcaron        gcircumflex        gcommaaccent        gdotaccent        ];
@italicG =    [g.italic gbreve.italic gcaron.italic gcircumflex.italic gcommaaccent.italic gdotaccent.italic ];
@simpleG =    [g.simple gbreve.simple gcaron.simple gcircumflex.simple gcommaaccent.simple gdotaccent.simple ];

feature ss02 {
    featureNames {
        # MS, unicode, English
        name "Single-story ‘g’";
        # Apple, roman, unspecified
        name 1 "Single-story ‘g’";
    };
    sub @dfltG by @simpleG;
    sub g.mono by g.simple;
} ss02;

feature ss03 {
    featureNames {
        # MS, unicode, English
        name "Simplified Mono ‘f’";
        # Apple, roman, unspecified
        name 1 "Simplified Mono ‘f’";
    };
    sub f by f.simple;
    sub f.mono by f.simple;
} ss03;

@sansI = [i        iacute        ibreve        icircumflex        idieresis        idotbelow        igrave        ihook        imacron        iogonek        itilde       ];
@italI = [i.italic iacute.italic ibreve.italic icircumflex.italic idieresis.italic idotbelow.italic igrave.italic ihook.italic imacron.italic iogonek.italic itilde.italic];
@smplI = [i.simple iacute.simple ibreve.simple icircumflex.simple idieresis.simple idotbelow.simple igrave.simple ihook.simple imacron.simple iogonek.simple itilde.simple];
@monoI = [i.mono   iacute.mono   ibreve.mono   icircumflex.mono   idieresis.mono   idotbelow.mono   igrave.mono   ihook.mono   imacron.mono   iogonek.mono   itilde.mono  ];

feature ss04 {
    featureNames {
        # MS, unicode, English
        name "Simplified Mono ‘i’";
        # Apple, roman, unspecified
        name 1 "Simplified Mono ‘i’";
    };
    sub @sansI by @smplI;
    sub @monoI by @smplI;
    sub fi by f i.simple;
} ss04;

# TODO: add /lcaron
# TODO: update l italic rules
@sansL =   [l        lacute        lcommaaccent        ldotbelow        llinebelow        lslash        ];
@monoL =   [l.mono   lacute.mono   lcommaaccent.mono   ldotbelow.mono   llinebelow.mono   lslash.mono   ];
@italL =   [l.italic lacute.italic lcommaaccent.italic ldotbelow.italic llinebelow.italic lslash.italic ];
@simpleL = [l.simple lacute.simple lcommaaccent.simple ldotbelow.simple llinebelow.simple lslash.simple ];

feature ss05 {
    featureNames {
        # MS, unicode, English
        name "Simplified Mono ‘l’";
        # Apple, roman, unspecified
        name 1 "Simplified Mono ‘l’";
    };
    sub @sansL by @simpleL;
    sub @monoL by @simpleL;
} ss05;

@sansR =   [r        racute        rcaron        rcommaaccent        ];
@monoR =   [r.mono   racute.mono   rcaron.mono   rcommaaccent.mono   ];
@italR =   [r.italic racute.italic rcaron.italic rcommaaccent.italic ];
@simpleR = [r.simple racute.simple rcaron.simple rcommaaccent.simple ];

feature ss06 {
    featureNames {
        # MS, unicode, English
        name "Simplified Mono ‘r’";
        # Apple, roman, unspecified
        name 1 "Simplified Mono ‘r’";
    };
    sub @sansR by @simpleR;
    sub @monoR by @simpleR;
} ss06;

@dfltCapL = [L      Lacute      Lcommaaccent      Lcaron      Ldotbelow      Llinebelow      Lslash       ];
@sansCapL = [L.sans Lacute.sans Lcommaaccent.sans Lcaron.sans Ldotbelow.sans Llinebelow.sans Lslash.sans  ];

@dfltCapZ = [Z      Zacute      Zdotaccent      Zcaron      Zdotbelow      ];
@sansCapZ = [Z.sans Zacute.sans Zdotaccent.sans Zcaron.sans Zdotbelow.sans ];

feature ss07 {
    featureNames {
        # MS, unicode, English
        name "No-serif ‘L’ & ‘Z’";
        # Apple, roman, unspecified
        name 1 "No-serif ‘L’ & ‘Z’";
    };
    sub @dfltCapL by @sansCapL;
    sub @dfltCapZ by @sansCapZ;
    sub z.italic by z;
} ss07;

feature ss08 {
    featureNames {
        # MS, unicode, English
        name "Simplified Mono ‘at’";
        # Apple, roman, unspecified
        name 1 "Simplified Mono ‘at’";
    };
    sub at by at.alt;
    sub at.case by at.alt_case;
} ss08;

# TODO: change names of ‘s’x.ss01', etc, in sources

feature ss09 {
    featureNames {
        # MS, unicode, English
        name "Simplified Six & Nine";
        # Apple, roman, unspecified
        name 1 "Simplified Six & Nine";
    };
    sub six by six.ss01;
    sub sixsuperior by sixsuperior.ss01;
    sub sixinferior by sixinferior.ss01;
    sub nine by nine.ss01;
    sub ninesuperior by ninesuperior.ss01;
    sub nineinferior by nineinferior.ss01;
} ss09;

# TODO: add dotted zero as ss10
feature ss10 {
    featureNames {
        # MS, unicode, English
        name "Dotted Zero";
        # Apple, roman, unspecified
        name 1 "Dotted Zero";
    };
    sub zero by zero.dotted;
    sub zero.sans by zero.dotted;
    sub zerosuperior by zerosuperior.dotted;
    sub zeroinferior by zeroinferior.dotted;
    sub zerosuperior.sans by zerosuperior.dotted;
    sub zeroinferior.sans by zeroinferior.dotted;
} ss10;

feature ss11 {
    featureNames {
        # MS, unicode, English
        name "Slashed Zero in Sans";
        # Apple, roman, unspecified
        name 1 "Slashed Zero in Sans";
    };
    sub zero.sans by zero;
    sub zerosuperior.sans by zerosuperior;
    sub zeroinferior.sans by zeroinferior;
} ss11;

feature ss12 {
    featureNames {
        # MS, unicode, English
        name "Simplified One";
        # Apple, roman, unspecified
        name 1 "Simplified One";
    };
    sub one by one.simple;
    sub one.sans by one.simple;
} ss12;